
import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { Resend } from "npm:resend@2.0.0";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

interface EmailRequest {
  email: string;
  result: {
    birthSign: string;
    nakshatra: string;
    luckyNumbers: number[];
    luckyColors: string[];
    suggestedNames: Array<{
      name: string;
      meaning: string;
      origin: string;
      score: number;
    }>;
    planetaryInfluence: string;
    recommendations: string[];
  };
}

const handler = async (req: Request): Promise<Response> => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { email, result }: EmailRequest = await req.json();

    const topThreeNames = result.suggestedNames
      .sort((a, b) => b.score - a.score)
      .slice(0, 3);

    const emailResponse = await resend.emails.send({
      from: "AstroName Oracle <onboarding@resend.dev>",
      to: [email],
      subject: "üåü Your Personalized Astrological Name Report",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px;">
          <div style="background: white; border-radius: 15px; padding: 30px; box-shadow: 0 10px 30px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #6366f1; margin: 0; font-size: 28px;">‚≠ê AstroName Oracle ‚≠ê</h1>
              <p style="color: #666; font-size: 16px; margin: 10px 0;">Your Personalized Vedic Name Report</p>
            </div>

            <div style="background: #f8fafc; padding: 20px; border-radius: 10px; margin-bottom: 25px;">
              <h2 style="color: #059669; margin-top: 0;">üåü Vedic Birth Chart Details</h2>
              <p><strong>Birth Sign (Rashi):</strong> ${result.birthSign}</p>
              <p><strong>Nakshatra:</strong> ${result.nakshatra}</p>
              <p><strong>Lucky Numbers:</strong> ${result.luckyNumbers.join(', ')}</p>
              <p><strong>Lucky Colors:</strong> ${result.luckyColors.join(', ')}</p>
              <p><strong>Planetary Influence:</strong> ${result.planetaryInfluence}</p>
            </div>

            <div style="background: #fef3c7; padding: 20px; border-radius: 10px; margin-bottom: 25px;">
              <h2 style="color: #7c3aed; margin-top: 0;">üëë Top 3 Recommended Names</h2>
              ${topThreeNames.map((name, index) => `
                <div style="border: 1px solid #d1d5db; padding: 15px; margin: 10px 0; border-radius: 8px; background: white;">
                  <h3 style="color: #6366f1; margin: 0 0 10px 0;">Rank #${index + 1}: ${name.name}</h3>
                  <p style="margin: 5px 0;"><strong>Meaning:</strong> ${name.meaning}</p>
                  <p style="margin: 5px 0;"><strong>Origin:</strong> ${name.origin}</p>
                  <p style="margin: 5px 0;"><strong>Astrology Score:</strong> <span style="color: #6366f1; font-weight: bold;">${name.score}/10</span></p>
                </div>
              `).join('')}
            </div>

            <div style="background: #ecfdf5; padding: 20px; border-radius: 10px; margin-bottom: 25px;">
              <h2 style="color: #059669; margin-top: 0;">üîÆ Vedic Guidance & Recommendations</h2>
              ${result.recommendations.map(rec => `<p style="margin: 10px 0;">‚Ä¢ ${rec}</p>`).join('')}
            </div>

            <div style="text-align: center; border-top: 1px solid #e5e7eb; padding-top: 20px; margin-top: 30px;">
              <p style="color: #666; font-style: italic;">‚ú® Generated by AstroName Oracle ‚ú®</p>
              <p style="color: #666; font-size: 14px;">Visit us for more astrological insights and consultations</p>
            </div>
          </div>
        </div>
      `,
    });

    console.log("Email sent successfully:", emailResponse);

    return new Response(JSON.stringify({ success: true, data: emailResponse }), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
        ...corsHeaders,
      },
    });
  } catch (error: any) {
    console.error("Error in send-report-email function:", error);
    return new Response(
      JSON.stringify({ error: error.message }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);
